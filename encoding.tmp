
MODULE exists(carry-in)
VAR
    value : boolean;
ASSIGN
    init (value) := {FALSE,TRUE};
    next (value) :=
      case
        carry-in : {FALSE,TRUE};
        TRUE     : value;
      esac;
DEFINE carry-out := carry-in;

MODULE forall(carry-in)
VAR
    value : boolean;
ASSIGN
    init (value) := FALSE;
    next (value) := value & carry-in;
DEFINE
    carry-out := value & carry-in;

MODULE formula(x1,x2,x3,x4,x5,x6,x7,x8)

DEFINE
	c0 := !x3 | !x1;
	c1 := !x3;
	c2 := !x4 | !x2;
	c3 := x4 | !x1;
	c4 := !x2 | !x1;
	c5 := x1 | !x4;
	c6 := !x2 | x3;
	adm := c0 & c1 & c2 & c3 & c4 & c5 & c6;
	d0 := !x7 | !x5;
	d1 := !x7;
	d2 := !x8 | !x6;
	d3 := x8 | !x5;
	d4 := !x6 | !x5;
	d5 := x5 | !x8;
	d6 := !x6 | x7;
	admr := d0 & d1 & d2 & d3 & d4 & d5 & d6;
	ner := x5 | x6;
	e0 := !x5 | !x1;
	e1 := !x7 | !x1;
	e2 := !x5 | !x3;
	e3 := !x7 | !x3;
	e4 := !x6 | !x2;
	e5 := !x8 | !x2;
	e6 := !x6 | !x4;
	e7 := !x8 | !x4;
	red := e0 & e1 & e2 & e3 & e4 & e5 & e6 & e7;
	sat := !adm | x1 | (admr & ner & red);

MODULE main

VAR
		x8	: exists(clauses.sat);
		x7	: exists(x8.carry-out);
		x6	: exists(x7.carry-out);
		x5	: exists(x6.carry-out);
		x4	: forall(x5.carry-out);
		x3	: forall(x4.carry-out);
		x2	: forall(x3.carry-out);
		x1	: forall(x2.carry-out);
clauses	: formula(x1.value,x2.value,x3.value,x4.value,x5.value,x6.value,x7.value,x8.value);
LTLSPEC F (!clauses.sat)
